name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: YourMedia
          path: |
            target/*.jar
            Dockerfile
            docker-compose.yml

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: YourMedia
          path: target/

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > ecfkey.pem
          ls -l ecfkey.pem
          chmod 600 ecfkey.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_INSTANCE_IP }} >> ~/.ssh/known_hosts
      - name: Deploy Application
        run: |
          scp -i ecfkey.pem target/* ec2-user@${{ secrets.EC2_INSTANCE_IP }}:/home/ec2-user/
          scp -i ecfkey.pem Dockerfile ec2-user@${{ secrets.EC2_INSTANCE_IP }}:/home/ec2-user/
          scp -i ecfkey.pem docker-compose.yml ec2-user@${{ secrets.EC2_INSTANCE_IP }}:/home/ec2-user/
          ssh -i ecfkey.pem ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
            cd /home/ec2-user/
            docker-compose down
            docker-compose up -d --build
          EOF
